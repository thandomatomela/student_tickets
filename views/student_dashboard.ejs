<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    
    <style>
        /* Ensure modal is 80% of the screen width */
        .modal-xl {
            max-width: 80%;
        }

        /* Fix card height for uniformity */
        .card {
            height: 200px; /* Adjust as needed */
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .card-body {
            overflow: hidden;
        }

        /* Limit subject and description with ellipsis */
        .card-title {
            font-size: 1.2rem;
            font-weight: bold;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .card-text {
            display: -webkit-box;
            -webkit-line-clamp: 2; /* Limit to 2 lines */
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Student Dashboard - Your Reminders</h2>
            <div>
                <a href="/create-reminder" class="btn btn-primary">Create Reminder</a>
                <a href="/logout" class="btn btn-danger">Logout</a>
            </div>
        </div>

        <!-- Flash Messages -->
        <% if (messages.success) { %>
            <div class="alert alert-success"><%= messages.success %></div>
        <% } %>
        <% if (messages.error) { %>
            <div class="alert alert-danger"><%= messages.error %></div>
        <% } %>

        <!-- Reminders Section -->
        <div class="row">
            <% if (reminders.length > 0) { %>
                <% reminders.forEach(reminder => { %>
                    <div class="col-md-4 mb-3">
                        <div class="card shadow-lg">
                            <div class="card-body">
                                <h5 class="card-title" title="<%= reminder.subject %>"><%= reminder.subject %></h5>
                                <p class="card-text"><%= reminder.description %></p>
                                <p><strong>Status:</strong> <%= reminder.status %></p>

                                <!-- Action Buttons -->
                                <div class="d-flex gap-2">
                                    <button class="btn btn-secondary btn-sm open-modal" data-id="<%= reminder._id %>">Open</button>
                                    <a href="/edit/<%= reminder._id %>" class="btn btn-warning btn-sm">Edit</a>

                                    <form action="/nudge/<%= reminder._id %>" method="POST">
                                        <button type="submit" class="btn btn-info btn-sm">Nudge</button>
                                    </form>

                                    <form action="/delete/<%= reminder._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this reminder?');">
                                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <p class="text-center text-muted">No reminders found.</p>
            <% } %>
        </div>
    </div>

    <!-- Reminder Modal -->
    <div class="modal fade" id="reminderModal" tabindex="-1" aria-labelledby="reminderModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reminderModalLabel">Reminder Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h5 id="modalSubject"></h5>
                    <p id="modalDescription"></p>
                    <p><strong>Status:</strong> <span id="modalStatus"></span></p>

                    <h6>Notes:</h6>
                    <ul id="notesList" class="list-group mb-3"></ul>

                    <!-- Add Note Form -->
                    <form id="addNoteForm">
                        <input type="hidden" id="reminderId">
                        <div class="mb-3">
                            <label for="noteText" class="form-label">Add a Note:</label>
                            <textarea id="noteText" class="form-control" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-success">Add Note</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Open Modal and Load Reminder Data
            document.querySelectorAll(".open-modal").forEach(button => {
                button.addEventListener("click", async function () {
                    const reminderId = this.dataset.id;
                    document.getElementById("reminderId").value = reminderId;

                    try {
                        const response = await fetch(`/reminder/${reminderId}`);
                        if (!response.ok) throw new Error("Failed to fetch reminder details.");
                        
                        const data = await response.json();
                        document.getElementById("modalSubject").textContent = data.subject;
                        document.getElementById("modalDescription").textContent = data.description;
                        document.getElementById("modalStatus").textContent = data.status;

                        // Load Notes
                        const notesList = document.getElementById("notesList");
                        notesList.innerHTML = "";
                        data.notes.forEach(note => {
                            const noteItem = document.createElement("li");
                            noteItem.className = "list-group-item";
                            noteItem.textContent = `${note.text} - ${note.addedBy}`;
                            notesList.appendChild(noteItem);
                        });

                        new bootstrap.Modal(document.getElementById("reminderModal")).show();
                    } catch (error) {
                        console.error("Error:", error);
                        alert("Failed to load reminder.");
                    }
                });
            });

            // Submit New Note
            document.getElementById("addNoteForm").addEventListener("submit", async function (e) {
                e.preventDefault();
                const reminderId = document.getElementById("reminderId").value;
                const noteText = document.getElementById("noteText").value.trim();

                if (!noteText) {
                    alert("Note cannot be empty!");
                    return;
                }

                try {
                    const response = await fetch("/add-note", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ reminderId, note: noteText })
                    });

                    if (!response.ok) throw new Error("Failed to add note.");
                    
                    // Append new note to list
                    const notesList = document.getElementById("notesList");
                    const noteItem = document.createElement("li");
                    noteItem.className = "list-group-item";
                    noteItem.textContent = noteText;
                    notesList.appendChild(noteItem);

                    document.getElementById("noteText").value = ""; // Clear input field
                } catch (error) {
                    console.error("Error:", error);
                    alert("Failed to add note.");
                }
            });
        });
    </script>
</body>
</html>
